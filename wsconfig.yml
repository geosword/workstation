# The idea of this playbook is that it maintains the configuration of the workstation, rather than boot strapping it
# Currently it handles three specific files of plasma, but could also manage tmux, vim or anything else we can resonably control
# with config files

# TODO WE REALLY WANT THIS TO RUN AS QUICKLY AS POSSIBLE

# TODO you can / should probably run this AS your user, and escalate when required
- hosts: all
  tasks:
    - name: include some global variables
      include_vars: "{{ item }}"
      with_items:
        - vars/main.yml

    - name: create some helpful folders
      file:
        path: "{{ userdir }}/{{ item }}"
        state: directory
        mode: "0755"
      become: true
      become_user: dylanh
      with_items: 
        - development
        - Documents
        - Downloads
        - Pictures
        - tools
        - temp
        - .kube
        - .tmux
        - .vim
        - .ssh
        - .zsh
      tags:
        - createfolders

    - name: git configuration
      copy:
        src: files/git/gitconfig
        dest: "{{ userdir }}/.gitconfig"
      become: true
      become_user: dylanh
      tags:
        - gitconfig

    - name: reload hotkeys script
      copy:
        src: files/defaults/files/tools/reloadhotkeys.sh
        dest: "{{ userdir }}/tools/"
        mode: "0770"
      become: true
      become_user: dylanh

    - name: switch.py for launching and switching hotness
      git:
        repo: "https://gitea.sectigo.net/dylanh/switchto.git"
        dest: "{{ userdir }}/tools/switchto"
      become: true
      become_user: dylanh

    - name: If we have a public key, lets add that to authorized keys, on the basis its OUR public key
      copy:
        src: "/root/.ssh/authorized_keys"
        dest: "{{ userdir }}/.ssh/authorized_keys"
        remote_src: true
        owner: dylanh
      ignore_errors: true

    - name: tmux split
      git:
        repo: "https://gitea.sectigo.net/dylanh/tmuxsplit.git"
        dest: "{{ userdir }}/development/tmuxsplit"
      become: true
      become_user: dylanh
      ignore_errors: true
# zsh and oh my zsh configuration

    - name: install zshrc
      copy:
        src: files/zsh/zshrc
        dest: "{{ userdir }}/.zsh/zshrc"
        mode: '0644'
      become: yes
      become_user: dylanh
      tags:
        - zsh

    - name: install zsh aliases
      copy:
        src: files/zsh/zshaliases
        dest: "{{ userdir }}/.zsh/aliases"
        mode: '0644'
      become: yes
      become_user: dylanh
      tags:
        - zsh

    - name: zsh config symlink
      file:
        src: "{{ userdir }}/.zsh/zshrc"
        dest: "{{ userdir }}/.zshrc"
        mode: '0644'
        state: link
      become: yes
      become_user: dylanh
      tags:
        - zsh

    - name: Cloning oh-my-zsh
      git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: ~/.oh-my-zsh
      become: yes
      become_user: dylanh

    - name: Cloning auto suggestion
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: ~/.zsh/zsh-autosuggestions
      become: yes
      become_user: dylanh

# Vim stuff
    - name: install vimrc
      copy:
        src: files/vim/vimrc
        dest: "{{ userdir }}/.vim/vimrc"
        mode: '0644'
      become: yes
      become_user: dylanh
      tags:
        - vim

    - name: vim config symlink
      file:
        src: "{{ userdir }}/.vim/vimrc"
        dest: "{{ userdir }}/.vimrc"
        mode: '0644'
        state: link
      become: yes
      become_user: dylanh
      tags:
        - vim

# TMUX stuff
    - name: install tmux conf
      copy:
        src: files/tmux/tmux.conf
        dest: "{{ userdir }}/.tmux/tmux.conf"
        mode: '0644'
      become: yes
      become_user: dylanh
      tags:
        - tmux

    - name: tmux config symlink
      file:
        src: "{{ userdir }}/.tmux/tmux.conf"
        dest: "{{ userdir }}/.tmux.conf"
        mode: '0644'
        state: link
      become: yes
      become_user: dylanh
      tags:
        - tmux

# SSH config
    - name: install ssh client config
      copy:
        src: files/ssh/config
        dest: "{{ userdir }}/.ssh/config"
        mode: '0644'
      become: yes
      become_user: dylanh
      tags:
        - createuser
# https://www.reddit.com/r/kde/comments/6u0wo7/configuring_kde_by_editing_the_config_files/
# https://bugs.kde.org/show_bug.cgi?id=300532
# Adopt ~/.config/kglobalshortcutsrc to your needs
# Save
# Force kglobalaccel (apparently, responsible for the global shortcuts) to quit and restart: kquitapp kglobalaccel && sleep 2s && kglobalaccel5&
# The above seems to work for me, also without restart. Note that you probably need to replace kquitapp with kquitapp5. So writing the ~/.config files may be a solution

# KDE configuration
# Copy in the config for the task bar to set it up how we want it. We MAY be able to do this with kwriteconfig5, but for now we'll just copy the file in
#
# THIS will get a task switcher setting change noticed, but wont do anything keyboard related.
# We can assign the reloading of kglobalaccel5 to a hotkey, but everything else should need a log out / login if thats whats needed. 
# kwin_x11 --replace & 
# kquitapp5 kglobalaccel && sleep 2s && kglobalaccel5 &
#
    - name: "Copy in custom plasma files"
      copy:
        src: "./files/defaults/files/dotconfig/{{ item }}"
        dest: "{{ userdir }}/.config/"
      with_items:
# custom shortcuts
        - khotkeysrc
# Keyboard layout in plasma
        - kcminputrc
        - kxkbrc
# initially for to make the task switcher "grid" but looks like it could be used to set compositing too
        - kwinrc
# latte configuration
        - latte
      become: yes
      become_user: dylanh

    - name: include default hotkey vars
      include_vars:
        file: default_hotkeys.yml
      tags: hotkeys

    - name: check for host specific hotkeys
      find:
        path: "./vars/"
        pattern: "{{ inventory_hostname }}_hotkeys.yml"
      register: hosthotkeys
      delegate_to: localhost
      tags: hotkeys

    - name: include host specific hotkey vars
      include_vars:
        file: "{{ inventory_hostname }}_hotkeys.yml"
      when:
        - hosthotkeys.matched > 0
      tags: hotkeys

    - name: Set the default hotkeys for all hosts
      command: "/usr/bin/kwriteconfig5 --file {{ item.split('|')[0] }} --group '{{ item.split('|')[1] }}' --key '{{ item.split('|')[2] }}' '{{ item.split('|')[3] }}'"
      with_items:
        - "{{ defaulthotkeys }}"
      become: true
      become_user: dylanh
      tags: hotkeys

    - name: Set the host specific hotkeys
      command: "/usr/bin/kwriteconfig5 --file {{ item.split('|')[0] }} --group '{{ item.split('|')[1] }}' --key '{{ item.split('|')[2] }}' '{{ item.split('|')[3] }}'"
      with_items:
        - "{{ hotkeys }}"
      become: true
      become_user: dylanh
      when:
        - hosthotkeys.matched > 0
      tags: hotkeys
